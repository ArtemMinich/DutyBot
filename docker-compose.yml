services:
  duty-api:
    build:
      context: ./duty-bot-api
      dockerfile: Dockerfile
    container_name: duty-api
    environment:
      SERVER_PORT: ${SERVER_PORT}
      BD_HOST: ${BD_HOST}
      BD_PORT: ${BD_PORT}
      BD_USERNAME: ${BD_USERNAME}
      BD_PASSWORD: ${BD_PASSWORD}
      BD_NAME: ${BD_NAME}
    ports:
      - "${SERVER_PORT}:8080"
    networks:
      - internal-duty-bot-network
      - external-duty-bot-network
    restart: unless-stopped

  duty-bot:
    build:
      context: ./duty-bot
      dockerfile: Dockerfile
    container_name: duty-bot
    stdin_open: true  # Дозволяє ввід через термінал
    tty: true  
    environment:
      TZ: Europe/Kyiv
      BOT_TOKEN: ${BOT_TOKEN}
      API_URL: ${API_URL}
      ALLOWED_IDS: ${ALLOWED_IDS}
      GROUP_ID: ${GROUP_ID}
      POLL_HOUR: ${POLL_HOUR}
      POLL_MINUTES: ${POLL_MINUTES}
      POLL_EXPIRETIME: ${POLL_EXPIRETIME}
      DAYS_OF_WEEK: ${DAYS_OF_WEEK}
      LIGHT_CHECK: ${LIGHT_CHECK}
      MESSAGE_CHECK: ${MESSAGE_CHECK}
      TELEGRAM_API_ID: ${TELEGRAM_API_ID}
      TELEGRAM_API_HASH: ${TELEGRAM_API_HASH}
      CHANNEL_USERNAME: ${CHANNEL_USERNAME}
      QUEUE_NUMBER: ${QUEUE_NUMBER}
      SEMIQUEUE_NUMBER: ${SEMIQUEUE_NUMBER}
    ports:
      - "3000:3000"
    depends_on:
      - duty-api
    networks:
      - internal-duty-bot-network
    restart: always
    
networks:
  internal-duty-bot-network:
    name: internal-duty-bot-network
  external-duty-bot-network:
    name: external-duty-bot-network
